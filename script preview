local player = game.Players.LocalPlayer
local humanoid = player.Character and player.Character:WaitForChild("Humanoid")

local autoJumpEnabled = false -- Toggle state

-- Create UI
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Credits label
local creditsLabel = Instance.new("TextLabel")
creditsLabel.Parent = screenGui
creditsLabel.Size = UDim2.new(0, 200, 0, 30)
creditsLabel.Position = UDim2.new(0.5, -100, 0)
creditsLabel.BackgroundTransparency = 1
creditsLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
creditsLabel.TextSize = 14
creditsLabel.Font = Enum.Font.Gotham
creditsLabel.Text = "Made by kevinivy100"

-- Status label (now clickable)
local statusLabel = Instance.new("TextButton") -- Converted to a button
statusLabel.Parent = screenGui
statusLabel.Size = UDim2.new(0, 200, 0, 50)
statusLabel.Position = UDim2.new(0.5, -100, 0.05, 0)
statusLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
statusLabel.BackgroundTransparency = 0.5
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextSize = 18
statusLabel.Font = Enum.Font.GothamBold
statusLabel.Text = "Auto-Jump: OFF"
statusLabel.Visible = true

-- Keybind label
local keybindLabel = Instance.new("TextLabel")
keybindLabel.Parent = screenGui
keybindLabel.Size = UDim2.new(0, 200, 0, 30)
keybindLabel.Position = UDim2.new(0.5, -100, 0.12, 0)
keybindLabel.BackgroundTransparency = 1
keybindLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
keybindLabel.TextSize = 14
keybindLabel.Font = Enum.Font.Gotham
keybindLabel.Text = "Toggle Auto-Jump: [J] or Tap"
keybindLabel.Visible = true

-- Hide button
local hideButton = Instance.new("TextButton")
hideButton.Parent = screenGui
hideButton.Size = UDim2.new(0, 100, 0, 30)
hideButton.Position = UDim2.new(0.5, -50, 0.18, 0) -- Position of hide button
hideButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
hideButton.BackgroundTransparency = 0.5
hideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
hideButton.TextSize = 14
hideButton.Font = Enum.Font.GothamBold
hideButton.Text = "Hide UI"
hideButton.Visible = true

-- Show button (hidden at first, now positioned slightly higher)
local showButton = Instance.new("TextButton")
showButton.Parent = screenGui
showButton.Size = UDim2.new(0, 120, 0, 40)
showButton.Position = UDim2.new(0.5, -60, 0.78, 0) -- Raised slightly for better visibility
showButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
showButton.BackgroundTransparency = 0.5
showButton.TextColor3 = Color3.fromRGB(255, 255, 255)
showButton.TextSize = 14
showButton.Font = Enum.Font.GothamBold
showButton.Text = "Show UI"
showButton.Visible = false

-- Function to make the character jump
local function autoJump()
    while autoJumpEnabled do
        wait(0)
        if humanoid then
            humanoid.Jump = true
        end
    end
end

-- Toggle auto-jump function
local function toggleAutoJump()
    autoJumpEnabled = not autoJumpEnabled
    statusLabel.Text = autoJumpEnabled and "Auto-Jump: ON" or "Auto-Jump: OFF"
    if autoJumpEnabled then autoJump() end
end

-- Hide UI function
local function hideUI()
    statusLabel.Visible = false
    keybindLabel.Visible = false
    hideButton.Visible = false
    creditsLabel.Visible = false
    showButton.Visible = true
end

-- Show UI function
local function showUI()
    statusLabel.Visible = true
    keybindLabel.Visible = true
    hideButton.Visible = true
    creditsLabel.Visible = true
    showButton.Visible = false
end

-- Detect key press (for PC users)
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.J then
        toggleAutoJump()
    end
end)

-- Detect label tap (for mobile users)
statusLabel.MouseButton1Click:Connect(toggleAutoJump)

-- Detect hide button click
hideButton.MouseButton1Click:Connect(hideUI)

-- Detect show button click
showButton.MouseButton1Click:Connect(showUI)
